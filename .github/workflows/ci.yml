name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-server:
    runs-on: ubuntu-latest
    if: ${{ hashFiles('server/package.json') != '' }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'
          cache-dependency-path: server/package-lock.json
      - name: Install dependencies
        working-directory: server
        run: npm ci
      - name: Compile TypeScript
        if: hashFiles('server/tsconfig.json') != ''
        working-directory: server
        run: npx tsc -b
      - name: Run unit tests
        if: hashFiles('server/tests/**/*','server/test/**/*','server/**/*.spec.*','server/**/*.test.*') != ''
        working-directory: server
        run: npm test --if-present

  build-client:
    runs-on: ubuntu-latest
    if: ${{ hashFiles('client/package.json') != '' }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'
          cache-dependency-path: client/package-lock.json
      - name: Install dependencies
        working-directory: client
        run: npm ci
      - name: Compile TypeScript
        if: hashFiles('client/tsconfig.json') != ''
        working-directory: client
        run: npx tsc -b
      - name: Run unit tests
        if: hashFiles('client/tests/**/*','client/test/**/*','client/**/*.spec.*','client/**/*.test.*') != ''
        working-directory: client
        run: npm test --if-present

  docker-build:
    runs-on: ubuntu-latest
    needs: [build-server, build-client]
    if: ${{ hashFiles('Dockerfile') != '' }}
    steps:
      - uses: actions/checkout@v3
      - name: Build Docker image
        run: docker build -t gamearena:latest .

  deploy-staging:
    runs-on: ubuntu-latest
    needs: docker-build
    if: ${{ hashFiles('.github/staging-deploy.sh') != '' }}
    steps:
      - uses: actions/checkout@v3
      - name: Deploy to staging
        run: .github/staging-deploy.sh
